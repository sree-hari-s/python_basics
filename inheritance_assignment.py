# -*- coding: utf-8 -*-
"""Inheritance Assignment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17sochjyG62nL_us9NLB-dXxAW6JomWil
"""

#Q1
class parent_Class:
  num=10

class child_Class(parent_Class):
  pass

obj=child_Class()
print(obj.num)

#Q2
class A:
  def __init__(self):
    self.name='BOB'
    self.age=45

  def details(self):
    return self.name  
class B:    
  def __init__(self):
    self.name='ZAYN'
    self.id=100

  def details(self):
    return self.name  
class C(A,B): 
  def __init__(self):
    A.__init__(self)

  def get_details(self):
    return self.name,self.age

o=C()
o.get_details()

#Q3
class Sub1:
  def first(self):
    print("This is the 1st function from Sub1 class")

class Sub2:
  def second(self):
    print("This is the 2nd function from Sub2 class")    

class Super(Sub1,Sub2):
  def final(self):
    print("This is the final function from Super class")

x=Super()
x.first()
x.second()
x.final()

#Q4
class Parent:
  def fun1(self):
    print("This is the message from fun1")

class Child1(Parent):
  def fun2(self):
    print("This is the message from fun2")

class Child2(Parent):
  def fun3(self):
    print("This is the message from fun3")

a=Child2()
a.fun1()

#Q5
class Parent:
  def fun1(self):
    print("This is the message from fun1")

class Child(Parent):
  def fun2(self):
    print("This is the message from fun2")

class Hybrid(Child):
  def fun3(self):
    print("This is the message from fun3")

a=Hybrid()
a.fun1()
a.fun2()
a.fun3()